; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output\tm1650.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\Output\tm1650.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil\ARM\RV31\Inc -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F4xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\Output\tm1650.crf ..\drive\TM1650.c]
                          THUMB

                          AREA ||i.IIc_Ack||, CODE, READONLY, ALIGN=2

                  IIc_Ack PROC
;;;178    **********************************************************************************************************/
;;;179    void IIc_Ack(void)
000000  b570              PUSH     {r4-r6,lr}
;;;180    {
;;;181    	TM1650_SDA_0();	/* CPUȽ֯SDA = 0 */
000002  4d0e              LDR      r5,|L1.60|
000004  f44f7480          MOV      r4,#0x100
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GPIO_ResetBits
;;;182    	IIc_Delay();
000010  f7fffffe          BL       IIc_Delay
;;;183    	TM1650_SCL_1();	/* CPUӺʺ1ٶʱד */
000014  0066              LSLS     r6,r4,#1
000016  4631              MOV      r1,r6
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       GPIO_SetBits
;;;184    	IIc_Delay();
00001e  f7fffffe          BL       IIc_Delay
;;;185    	TM1650_SCL_0();
000022  4631              MOV      r1,r6
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       GPIO_ResetBits
;;;186    	IIc_Delay();
00002a  f7fffffe          BL       IIc_Delay
;;;187    	TM1650_SDA_1();	/* CPUˍ؅SDA؜П */
00002e  4621              MOV      r1,r4
000030  4628              MOV      r0,r5
000032  e8bd4070          POP      {r4-r6,lr}
000036  f7ffbffe          B.W      GPIO_SetBits
;;;188    }
;;;189    
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x40020800

                          AREA ||i.IIc_Delay||, CODE, READONLY, ALIGN=1

                  IIc_Delay PROC
;;;50     **********************************************************************************************************/
;;;51     static void IIc_Delay(void)
000000  2000              MOVS     r0,#0
;;;52     {
;;;53     	vu8 i;
;;;54     	for (i = 0; i < 200; i++);
000002  e001              B        |L2.8|
                  |L2.4|
000004  1c40              ADDS     r0,r0,#1
000006  b2c0              UXTB     r0,r0
                  |L2.8|
000008  28c8              CMP      r0,#0xc8
00000a  d3fb              BCC      |L2.4|
;;;55     }
00000c  4770              BX       lr
;;;56     /**********************************************************************************************************
                          ENDP


                          AREA ||i.IIc_NAck||, CODE, READONLY, ALIGN=2

                  IIc_NAck PROC
;;;195    **********************************************************************************************************/
;;;196    void IIc_NAck(void)
000000  b570              PUSH     {r4-r6,lr}
;;;197    {
;;;198    	TM1650_SDA_1();	/* CPUȽ֯SDA = 1 */
000002  4c0b              LDR      r4,|L3.48|
000004  f44f7180          MOV      r1,#0x100
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       GPIO_SetBits
;;;199    	IIc_Delay();
00000e  f7fffffe          BL       IIc_Delay
;;;200    	TM1650_SCL_1();	/* CPUӺʺ1ٶʱד */
000012  1565              ASRS     r5,r4,#21
000014  4629              MOV      r1,r5
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       GPIO_SetBits
;;;201    	IIc_Delay();
00001c  f7fffffe          BL       IIc_Delay
;;;202    	TM1650_SCL_0();
000020  4629              MOV      r1,r5
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       GPIO_ResetBits
;;;203    	IIc_Delay();	
000028  e8bd4070          POP      {r4-r6,lr}
00002c  f7ffbffe          B.W      IIc_Delay
;;;204    }
;;;205    /**********************************************************************************************************
                          ENDP

                  |L3.48|
                          DCD      0x40020800

                          AREA ||i.IIc_ReadByte||, CODE, READONLY, ALIGN=2

                  IIc_ReadByte PROC
;;;125    **********************************************************************************************************/
;;;126    vu8 IIc_ReadByte(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;127    {
;;;128    	vu8 i;
;;;129    	vu8 value;
;;;130    
;;;131    	/*接受一个8位数据 */
;;;132    	value = 0;
000004  2400              MOVS     r4,#0
;;;133    	for (i = 0; i < 8; i++)
000006  2500              MOVS     r5,#0
;;;134    	{
;;;135    		value <<= 1;
;;;136    		TM1650_SCL_1();
000008  f44f7700          MOV      r7,#0x200
00000c  4e0f              LDR      r6,|L4.76|
;;;137    		IIc_Delay();
;;;138    		if (TM1650_SDA_READ())
00000e  f44f7880          MOV      r8,#0x100
000012  e016              B        |L4.66|
                  |L4.20|
000014  0660              LSLS     r0,r4,#25             ;135
000016  0e04              LSRS     r4,r0,#24             ;135
000018  4639              MOV      r1,r7                 ;136
00001a  4630              MOV      r0,r6                 ;136
00001c  f7fffffe          BL       GPIO_SetBits
000020  f7fffffe          BL       IIc_Delay
000024  4641              MOV      r1,r8
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       GPIO_ReadInputDataBit
00002c  b108              CBZ      r0,|L4.50|
;;;139    		{
;;;140    			value++;
00002e  1c64              ADDS     r4,r4,#1
000030  b2e4              UXTB     r4,r4
                  |L4.50|
;;;141    		}
;;;142    		TM1650_SCL_0();
000032  4639              MOV      r1,r7
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       GPIO_ResetBits
;;;143    		IIc_Delay();
00003a  f7fffffe          BL       IIc_Delay
00003e  1c6d              ADDS     r5,r5,#1              ;133
000040  b2ed              UXTB     r5,r5                 ;133
                  |L4.66|
000042  2d08              CMP      r5,#8                 ;133
000044  d3e6              BCC      |L4.20|
;;;144    	}
;;;145    	return value;
000046  4620              MOV      r0,r4
;;;146    }
000048  e8bd81f0          POP      {r4-r8,pc}
;;;147    /**********************************************************************************************************
                          ENDP

                  |L4.76|
                          DCD      0x40020800

                          AREA ||i.IIc_SendByte||, CODE, READONLY, ALIGN=2

                  IIc_SendByte PROC
;;;92     **********************************************************************************************************/
;;;93     void IIc_SendByte(vu8 _ucByte)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;94     {
000004  4605              MOV      r5,r0
;;;95     	vu8 i;
;;;96     
;;;97     	/* 发送一个8位数据 */
;;;98     	for (i = 0; i < 8; i++)
000006  2400              MOVS     r4,#0
;;;99     	{		
;;;100    		if (_ucByte & 0x80)
;;;101    		{
;;;102    			TM1650_SDA_1();
000008  4e15              LDR      r6,|L5.96|
00000a  f44f7880          MOV      r8,#0x100
;;;103    		}
;;;104    		else
;;;105    		{
;;;106    			TM1650_SDA_0();
;;;107    		}
;;;108    		IIc_Delay();
;;;109    		TM1650_SCL_1();
00000e  1577              ASRS     r7,r6,#21
000010  e022              B        |L5.88|
                  |L5.18|
000012  0628              LSLS     r0,r5,#24             ;100
000014  d504              BPL      |L5.32|
000016  4641              MOV      r1,r8                 ;102
000018  4630              MOV      r0,r6                 ;102
00001a  f7fffffe          BL       GPIO_SetBits
00001e  e003              B        |L5.40|
                  |L5.32|
000020  4641              MOV      r1,r8                 ;106
000022  4630              MOV      r0,r6                 ;106
000024  f7fffffe          BL       GPIO_ResetBits
                  |L5.40|
000028  f7fffffe          BL       IIc_Delay
00002c  4639              MOV      r1,r7
00002e  4630              MOV      r0,r6
000030  f7fffffe          BL       GPIO_SetBits
;;;110    		IIc_Delay();	
000034  f7fffffe          BL       IIc_Delay
;;;111    		TM1650_SCL_0();
000038  4639              MOV      r1,r7
00003a  4630              MOV      r0,r6
00003c  f7fffffe          BL       GPIO_ResetBits
;;;112    		if (i == 7)
000040  2c07              CMP      r4,#7
000042  d103              BNE      |L5.76|
;;;113    		{
;;;114    			 TM1650_SDA_1(); // 置高
000044  4641              MOV      r1,r8
000046  4630              MOV      r0,r6
000048  f7fffffe          BL       GPIO_SetBits
                  |L5.76|
;;;115    		}
;;;116    		_ucByte <<= 1;	/* 先送高位 */
00004c  0668              LSLS     r0,r5,#25
00004e  0e05              LSRS     r5,r0,#24
;;;117    		IIc_Delay();
000050  f7fffffe          BL       IIc_Delay
000054  1c64              ADDS     r4,r4,#1              ;98
000056  b2e4              UXTB     r4,r4                 ;98
                  |L5.88|
000058  2c08              CMP      r4,#8                 ;98
00005a  d3da              BCC      |L5.18|
;;;118    	}
;;;119    }
00005c  e8bd81f0          POP      {r4-r8,pc}
;;;120    /**********************************************************************************************************
                          ENDP

                  |L5.96|
                          DCD      0x40020800

                          AREA ||i.IIc_Start||, CODE, READONLY, ALIGN=2

                  IIc_Start PROC
;;;61     **********************************************************************************************************/
;;;62     void IIc_Start(void)
000000  b570              PUSH     {r4-r6,lr}
;;;63     {
;;;64     	/* 启动IIC */
;;;65     	TM1650_SCL_1();
000002  4d0e              LDR      r5,|L6.60|
000004  f44f7400          MOV      r4,#0x200
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GPIO_SetBits
;;;66     	TM1650_SDA_1();
000010  1066              ASRS     r6,r4,#1
000012  4631              MOV      r1,r6
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       GPIO_SetBits
;;;67     	IIc_Delay();
00001a  f7fffffe          BL       IIc_Delay
;;;68     	TM1650_SDA_0();
00001e  4631              MOV      r1,r6
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       GPIO_ResetBits
;;;69     	IIc_Delay();
000026  f7fffffe          BL       IIc_Delay
;;;70     	TM1650_SCL_0();
00002a  4621              MOV      r1,r4
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       GPIO_ResetBits
;;;71     	IIc_Delay();
000032  e8bd4070          POP      {r4-r6,lr}
000036  f7ffbffe          B.W      IIc_Delay
;;;72     }
;;;73     /**********************************************************************************************************
                          ENDP

00003a  0000              DCW      0x0000
                  |L6.60|
                          DCD      0x40020800

                          AREA ||i.IIc_Stop||, CODE, READONLY, ALIGN=2

                  IIc_Stop PROC
;;;78     **********************************************************************************************************/
;;;79     void IIc_Stop(void)
000000  b570              PUSH     {r4-r6,lr}
;;;80     {
;;;81     	/* 发送停止位 */
;;;82     	TM1650_SDA_0();
000002  4d09              LDR      r5,|L7.40|
000004  f44f7480          MOV      r4,#0x100
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GPIO_ResetBits
;;;83     	TM1650_SCL_1();
000010  0061              LSLS     r1,r4,#1
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       GPIO_SetBits
;;;84     	IIc_Delay();
000018  f7fffffe          BL       IIc_Delay
;;;85     	TM1650_SDA_1();
00001c  4621              MOV      r1,r4
00001e  4628              MOV      r0,r5
000020  e8bd4070          POP      {r4-r6,lr}
000024  f7ffbffe          B.W      GPIO_SetBits
;;;86     }
;;;87     /**********************************************************************************************************
                          ENDP

                  |L7.40|
                          DCD      0x40020800

                          AREA ||i.IIc_WaitAck||, CODE, READONLY, ALIGN=2

                  IIc_WaitAck PROC
;;;152    **********************************************************************************************************/
;;;153    vu8 IIc_WaitAck(void)
000000  b570              PUSH     {r4-r6,lr}
;;;154    {
;;;155    	vu8 re;
;;;156    
;;;157    	TM1650_SDA_1();	/*  */
000002  4d10              LDR      r5,|L8.68|
000004  f44f7480          MOV      r4,#0x100
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GPIO_SetBits
;;;158    	IIc_Delay();
000010  f7fffffe          BL       IIc_Delay
;;;159    	TM1650_SCL_1();	/*  */
000014  0066              LSLS     r6,r4,#1
000016  4631              MOV      r1,r6
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       GPIO_SetBits
;;;160    	IIc_Delay();
00001e  f7fffffe          BL       IIc_Delay
;;;161    	if (TM1650_SDA_READ())	/* 读取ACK */
000022  4621              MOV      r1,r4
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       GPIO_ReadInputDataBit
00002a  b108              CBZ      r0,|L8.48|
;;;162    	{
;;;163    		re = 1;
00002c  2401              MOVS     r4,#1
00002e  e000              B        |L8.50|
                  |L8.48|
;;;164    	}
;;;165    	else
;;;166    	{
;;;167    		re = 0;
000030  2400              MOVS     r4,#0
                  |L8.50|
;;;168    	}
;;;169    	TM1650_SCL_0();
000032  4631              MOV      r1,r6
000034  4628              MOV      r0,r5
000036  f7fffffe          BL       GPIO_ResetBits
;;;170    	IIc_Delay();
00003a  f7fffffe          BL       IIc_Delay
;;;171    	return re;
00003e  4620              MOV      r0,r4
;;;172    }
000040  bd70              POP      {r4-r6,pc}
;;;173    /**********************************************************************************************************
                          ENDP

000042  0000              DCW      0x0000
                  |L8.68|
                          DCD      0x40020800

                          AREA ||i.TM1650_GPIO_INT||, CODE, READONLY, ALIGN=2

                  TM1650_GPIO_INT PROC
;;;32     **********************************************************************************************************/
;;;33     void TM1650_GPIO_INT(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;34     {
;;;35     	GPIO_InitTypeDef GPIO_InitStructure;//
;;;36     
;;;37     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);//
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;38     
;;;39     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8|GPIO_Pin_9;//
00000a  f44f7040          MOV      r0,#0x300
00000e  9000              STR      r0,[sp,#0]
;;;40     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
000010  2001              MOVS     r0,#1
000012  f88d0004          STRB     r0,[sp,#4]
;;;41     	GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;//开漏输出
000016  f88d0006          STRB     r0,[sp,#6]
;;;42     	GPIO_InitStructure.GPIO_Speed =GPIO_Speed_50MHz;//
00001a  2002              MOVS     r0,#2
00001c  f88d0005          STRB     r0,[sp,#5]
;;;43     	GPIO_Init(GPIOC, &GPIO_InitStructure);//
000020  4669              MOV      r1,sp
000022  4802              LDR      r0,|L9.44|
000024  f7fffffe          BL       GPIO_Init
;;;44     }
000028  bd1c              POP      {r2-r4,pc}
;;;45     /**********************************************************************************************************
                          ENDP

00002a  0000              DCW      0x0000
                  |L9.44|
                          DCD      0x40020800

                          AREA ||i.TM1650_Read_KEY||, CODE, READONLY, ALIGN=1

                  TM1650_Read_KEY PROC
;;;210    **********************************************************************************************************/
;;;211    vu8 TM1650_Read_KEY(void)
000000  b510              PUSH     {r4,lr}
;;;212    {
;;;213    	vu8 ucAck;
;;;214    	vu8 key;
;;;215    
;;;216    	IIc_Start();		/* 开始*/
000002  f7fffffe          BL       IIc_Start
;;;217    
;;;218    	/* 发送地址 */
;;;219    	IIc_SendByte(0x49);//读按键命令
000006  2049              MOVS     r0,#0x49
000008  f7fffffe          BL       IIc_SendByte
;;;220    	ucAck = IIc_WaitAck();	/* 等待ACK*/
00000c  f7fffffe          BL       IIc_WaitAck
;;;221    	IIc_Delay();
000010  f7fffffe          BL       IIc_Delay
;;;222    	key=IIc_ReadByte();//读取键值
000014  f7fffffe          BL       IIc_ReadByte
000018  4604              MOV      r4,r0
;;;223    	IIc_Stop();			/* 读完停止 */
00001a  f7fffffe          BL       IIc_Stop
;;;224    
;;;225    	return key;
00001e  4620              MOV      r0,r4
;;;226    }
000020  bd10              POP      {r4,pc}
;;;227    /**********************************************************************************************************
                          ENDP


                          AREA ||i.TM1650_SET_LED||, CODE, READONLY, ALIGN=1

                  TM1650_SET_LED PROC
;;;232    **********************************************************************************************************/
;;;233    void TM1650_SET_LED(vu8 addr,vu8 dat)
000000  b570              PUSH     {r4-r6,lr}
;;;234    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;235    	vu8 ucAck;
;;;236    	IIc_Start();		/* 开始*/
000006  f7fffffe          BL       IIc_Start
;;;237    	IIc_SendByte(addr);
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       IIc_SendByte
;;;238    	ucAck = IIc_WaitAck();	/* 等待ACK*/
000010  f7fffffe          BL       IIc_WaitAck
;;;239    	IIc_SendByte(dat);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       IIc_SendByte
;;;240    	ucAck = IIc_WaitAck();	/* 等待ACK*/
00001a  f7fffffe          BL       IIc_WaitAck
;;;241    	IIc_Stop();			/* 读完停止 */
00001e  e8bd4070          POP      {r4-r6,lr}
000022  f7ffbffe          B.W      IIc_Stop
;;;242    }
;;;243    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\drive\\TM1650.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_TM1650_c_840ba131____REV16|
#line 114 "D:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_TM1650_c_840ba131____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_TM1650_c_840ba131____REVSH|
#line 128
|__asm___8_TM1650_c_840ba131____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
