; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output\stm32f4xx_dbgmcu.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\Output\stm32f4xx_dbgmcu.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil\ARM\RV31\Inc -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F4xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\Output\stm32f4xx_dbgmcu.crf ..\Libraries\FWlib\src\stm32f4xx_dbgmcu.c]
                          THUMB

                          AREA ||i.DBGMCU_APB1PeriphConfig||, CODE, READONLY, ALIGN=2

                  DBGMCU_APB1PeriphConfig PROC
;;;122      */
;;;123    void DBGMCU_APB1PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
000000  4a04              LDR      r2,|L1.20|
;;;124    {
;;;125      /* Check the parameters */
;;;126      assert_param(IS_DBGMCU_APB1PERIPH(DBGMCU_Periph));
;;;127      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;128    
;;;129      if (NewState != DISABLE)
000002  b119              CBZ      r1,|L1.12|
;;;130      {
;;;131        DBGMCU->APB1FZ |= DBGMCU_Periph;
000004  6891              LDR      r1,[r2,#8]
000006  4301              ORRS     r1,r1,r0
000008  6091              STR      r1,[r2,#8]
;;;132      }
;;;133      else
;;;134      {
;;;135        DBGMCU->APB1FZ &= ~DBGMCU_Periph;
;;;136      }
;;;137    }
00000a  4770              BX       lr
                  |L1.12|
00000c  6891              LDR      r1,[r2,#8]            ;135
00000e  4381              BICS     r1,r1,r0              ;135
000010  6091              STR      r1,[r2,#8]            ;135
000012  4770              BX       lr
;;;138    
                          ENDP

                  |L1.20|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_APB2PeriphConfig||, CODE, READONLY, ALIGN=2

                  DBGMCU_APB2PeriphConfig PROC
;;;151      */
;;;152    void DBGMCU_APB2PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
000000  4a04              LDR      r2,|L2.20|
;;;153    {
;;;154      /* Check the parameters */
;;;155      assert_param(IS_DBGMCU_APB2PERIPH(DBGMCU_Periph));
;;;156      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;157    
;;;158      if (NewState != DISABLE)
000002  b119              CBZ      r1,|L2.12|
;;;159      {
;;;160        DBGMCU->APB2FZ |= DBGMCU_Periph;
000004  68d1              LDR      r1,[r2,#0xc]
000006  4301              ORRS     r1,r1,r0
000008  60d1              STR      r1,[r2,#0xc]
;;;161      }
;;;162      else
;;;163      {
;;;164        DBGMCU->APB2FZ &= ~DBGMCU_Periph;
;;;165      }
;;;166    }
00000a  4770              BX       lr
                  |L2.12|
00000c  68d1              LDR      r1,[r2,#0xc]          ;164
00000e  4381              BICS     r1,r1,r0              ;164
000010  60d1              STR      r1,[r2,#0xc]          ;164
000012  4770              BX       lr
;;;167    
                          ENDP

                  |L2.20|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_Config||, CODE, READONLY, ALIGN=2

                  DBGMCU_Config PROC
;;;83       */
;;;84     void DBGMCU_Config(uint32_t DBGMCU_Periph, FunctionalState NewState)
000000  4a04              LDR      r2,|L3.20|
;;;85     {
;;;86       /* Check the parameters */
;;;87       assert_param(IS_DBGMCU_PERIPH(DBGMCU_Periph));
;;;88       assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;89       if (NewState != DISABLE)
000002  b119              CBZ      r1,|L3.12|
;;;90       {
;;;91         DBGMCU->CR |= DBGMCU_Periph;
000004  6851              LDR      r1,[r2,#4]
000006  4301              ORRS     r1,r1,r0
000008  6051              STR      r1,[r2,#4]
;;;92       }
;;;93       else
;;;94       {
;;;95         DBGMCU->CR &= ~DBGMCU_Periph;
;;;96       }
;;;97     }
00000a  4770              BX       lr
                  |L3.12|
00000c  6851              LDR      r1,[r2,#4]            ;95
00000e  4381              BICS     r1,r1,r0              ;95
000010  6051              STR      r1,[r2,#4]            ;95
000012  4770              BX       lr
;;;98     
                          ENDP

                  |L3.20|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_GetDEVID||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetDEVID PROC
;;;67       */
;;;68     uint32_t DBGMCU_GetDEVID(void)
000000  4802              LDR      r0,|L4.12|
;;;69     {
;;;70        return(DBGMCU->IDCODE & IDCODE_DEVID_MASK);
000002  6800              LDR      r0,[r0,#0]
000004  f3c0000b          UBFX     r0,r0,#0,#12
;;;71     }
000008  4770              BX       lr
;;;72     
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_GetREVID||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetREVID PROC
;;;57       */
;;;58     uint32_t DBGMCU_GetREVID(void)
000000  4801              LDR      r0,|L5.8|
;;;59     {
;;;60        return(DBGMCU->IDCODE >> 16);
000002  6800              LDR      r0,[r0,#0]
000004  0c00              LSRS     r0,r0,#16
;;;61     }
000006  4770              BX       lr
;;;62     
                          ENDP

                  |L5.8|
                          DCD      0xe0042000

;*** Start embedded assembler ***

#line 1 "..\\Libraries\\FWlib\\src\\stm32f4xx_dbgmcu.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_stm32f4xx_dbgmcu_c_588a430f____REV16|
#line 114 "D:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_stm32f4xx_dbgmcu_c_588a430f____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_stm32f4xx_dbgmcu_c_588a430f____REVSH|
#line 128
|__asm___18_stm32f4xx_dbgmcu_c_588a430f____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
