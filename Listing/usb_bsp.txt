; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output\usb_bsp.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\Output\usb_bsp.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil\ARM\RV31\Inc -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F4xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\Output\usb_bsp.crf ..\USB\USB_APP\usb_bsp.c]
                          THUMB

                          AREA ||i.USB_OTG_BSP_ConfigVBUS||, CODE, READONLY, ALIGN=1

                  USB_OTG_BSP_ConfigVBUS PROC
;;;75     //pdev:USB OTG内核结构体指针
;;;76     void  USB_OTG_BSP_ConfigVBUS(USB_OTG_CORE_HANDLE *pdev)
000000  4770              BX       lr
;;;77     { 
;;;78     } 
;;;79     //USB_OTG us级延时函数
                          ENDP


                          AREA ||i.USB_OTG_BSP_DisableInterrupt||, CODE, READONLY, ALIGN=1

                  USB_OTG_BSP_DisableInterrupt PROC
;;;64     //pdev:USB OTG内核结构体指针
;;;65     void USB_OTG_BSP_DisableInterrupt(void)
000000  4770              BX       lr
;;;66     { 
;;;67     }
;;;68     //USB OTG 端口供电设置(本例程未用到)
                          ENDP


                          AREA ||i.USB_OTG_BSP_DriveVBUS||, CODE, READONLY, ALIGN=1

                  USB_OTG_BSP_DriveVBUS PROC
;;;70     //state:0,断电;1,上电
;;;71     void USB_OTG_BSP_DriveVBUS(USB_OTG_CORE_HANDLE *pdev, uint8_t state)
000000  4770              BX       lr
;;;72     { 
;;;73     }
;;;74     //USB_OTG 端口供电IO配置(本例程未用到)
                          ENDP


                          AREA ||i.USB_OTG_BSP_EnableInterrupt||, CODE, READONLY, ALIGN=1

                  USB_OTG_BSP_EnableInterrupt PROC
;;;52     //pdev:USB OTG内核结构体指针
;;;53     void USB_OTG_BSP_EnableInterrupt(USB_OTG_CORE_HANDLE *pdev)
000000  b508              PUSH     {r3,lr}
;;;54     {
;;;55     	NVIC_InitTypeDef   NVIC_InitStructure;
;;;56     	NVIC_InitStructure.NVIC_IRQChannel = OTG_FS_IRQn; 
000002  2043              MOVS     r0,#0x43
000004  f88d0000          STRB     r0,[sp,#0]
;;;57       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x00;//抢占优先级0
000008  2000              MOVS     r0,#0
00000a  f88d0001          STRB     r0,[sp,#1]
;;;58       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x03;//子优先级3
00000e  2003              MOVS     r0,#3
000010  f88d0002          STRB     r0,[sp,#2]
;;;59       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;//使能通道
000014  2001              MOVS     r0,#1
000016  f88d0003          STRB     r0,[sp,#3]
;;;60       NVIC_Init(&NVIC_InitStructure);//配置 
00001a  4668              MOV      r0,sp
00001c  f7fffffe          BL       NVIC_Init
;;;61     	
;;;62     }
000020  bd08              POP      {r3,pc}
;;;63     //USB OTG 中断设置,开启USB FS中断
                          ENDP


                          AREA ||i.USB_OTG_BSP_Init||, CODE, READONLY, ALIGN=2

                  USB_OTG_BSP_Init PROC
;;;24     //pdev:USB OTG内核结构体指针
;;;25     void USB_OTG_BSP_Init(USB_OTG_CORE_HANDLE *pdev)
000000  b57c              PUSH     {r2-r6,lr}
;;;26     {
;;;27       GPIO_InitTypeDef  GPIO_InitStructure;
;;;28     
;;;29       RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);//使能GPIOA时钟
000002  2101              MOVS     r1,#1
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;30       RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_OTG_FS, ENABLE);//使能USB OTG时钟	钟
00000a  2101              MOVS     r1,#1
00000c  2080              MOVS     r0,#0x80
00000e  f7fffffe          BL       RCC_AHB2PeriphClockCmd
;;;31       //GPIOA11,A12设置
;;;32       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_14 | GPIO_Pin_15;//PC14/15复用功能输出	
000012  f44f4040          MOV      r0,#0xc000
000016  9000              STR      r0,[sp,#0]
;;;33       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;//复用功能
000018  2002              MOVS     r0,#2
00001a  f88d0004          STRB     r0,[sp,#4]
;;;34       GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出
00001e  2400              MOVS     r4,#0
000020  f88d4006          STRB     r4,[sp,#6]
;;;35       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;//100MHz
000024  2003              MOVS     r0,#3
000026  f88d0005          STRB     r0,[sp,#5]
;;;36       GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL; 
00002a  f88d4007          STRB     r4,[sp,#7]
;;;37       GPIO_Init(GPIOC, &GPIO_InitStructure);//初始化
00002e  4e10              LDR      r6,|L5.112|
000030  4669              MOV      r1,sp
000032  4630              MOV      r0,r6
000034  f7fffffe          BL       GPIO_Init
;;;38     	
;;;39     	
;;;40       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;//PC10推挽输出		
000038  1531              ASRS     r1,r6,#20
00003a  9100              STR      r1,[sp,#0]
;;;41       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;//输出功能
00003c  2501              MOVS     r5,#1
00003e  f88d5004          STRB     r5,[sp,#4]
;;;42     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出
000042  f88d4006          STRB     r4,[sp,#6]
;;;43       GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL; 
000046  f88d4007          STRB     r4,[sp,#7]
;;;44       GPIO_Init(GPIOC, &GPIO_InitStructure);//初始化
00004a  4669              MOV      r1,sp
00004c  4630              MOV      r0,r6
00004e  f7fffffe          BL       GPIO_Init
;;;45     	
;;;46       USB_HOST_PWRCTRL=1;			//开启USB HOST电源供电
000052  4908              LDR      r1,|L5.116|
000054  600d              STR      r5,[r1,#0]
;;;47     
;;;48     	GPIO_PinAFConfig(GPIOC,GPIO_PinSource14,GPIO_AF_OTG_FS);//PA11,AF10(USB)
000056  f04f020a          MOV      r2,#0xa
00005a  f04f010e          MOV      r1,#0xe
00005e  4630              MOV      r0,r6
000060  f7fffffe          BL       GPIO_PinAFConfig
;;;49     	GPIO_PinAFConfig(GPIOC,GPIO_PinSource15,GPIO_AF_OTG_FS);//PA12,AF10(USB)
000064  220a              MOVS     r2,#0xa
000066  210f              MOVS     r1,#0xf
000068  4630              MOV      r0,r6
00006a  f7fffffe          BL       GPIO_PinAFConfig
;;;50     }
00006e  bd7c              POP      {r2-r6,pc}
;;;51     //USB OTG 中断设置,开启USB FS中断
                          ENDP

                  |L5.112|
                          DCD      0x40020800
                  |L5.116|
                          DCD      0x424102a8

                          AREA ||i.USB_OTG_BSP_mDelay||, CODE, READONLY, ALIGN=1

                  USB_OTG_BSP_mDelay PROC
;;;90     //msec:要延时的ms数.
;;;91     void USB_OTG_BSP_mDelay (const uint32_t msec)
000000  4770              BX       lr
;;;92     {  
;;;93     	//delay_ms(msec);
;;;94     }
;;;95        
                          ENDP


                          AREA ||i.USB_OTG_BSP_uDelay||, CODE, READONLY, ALIGN=1

                  USB_OTG_BSP_uDelay PROC
;;;82     //usec:要延时的us数.
;;;83     void USB_OTG_BSP_uDelay (const uint32_t usec)
000000  4770              BX       lr
;;;84     { 
;;;85        	//delay_us(usec);
;;;86     }
;;;87     //USB_OTG ms级延时函数
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\USB\\USB_APP\\usb_bsp.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_usb_bsp_c_9c25e72c____REV16|
#line 114 "D:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_usb_bsp_c_9c25e72c____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_usb_bsp_c_9c25e72c____REVSH|
#line 128
|__asm___9_usb_bsp_c_9c25e72c____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
