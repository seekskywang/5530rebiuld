; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output\flash.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\Output\flash.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil\ARM\RV31\Inc -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F4xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\Output\flash.crf ..\drive\flash.c]
                          THUMB

                          AREA ||i.EEPROM_READ_Coeff||, CODE, READONLY, ALIGN=2

                  EEPROM_READ_Coeff PROC
;;;147    //===========================================================================//
;;;148    void EEPROM_READ_Coeff(void)
000000  b570              PUSH     {r4-r6,lr}
;;;149    {
;;;150    /****************测量参数读取*********************/
;;;151    	REG_ReadV_Offset=EEPROM_READ_Byte(0x01);
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       EEPROM_READ_Byte
000008  4cde              LDR      r4,|L1.900|
00000a  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;152    	REG_ReadV_Offset=REG_ReadV_Offset<<8;
00000c  6820              LDR      r0,[r4,#0]  ; Correct_Strong
00000e  0200              LSLS     r0,r0,#8
000010  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;153    	REG_ReadV_Offset=REG_ReadV_Offset+EEPROM_READ_Byte(0x02);
000012  2002              MOVS     r0,#2
000014  f7fffffe          BL       EEPROM_READ_Byte
000018  6821              LDR      r1,[r4,#0]  ; Correct_Strong
00001a  4408              ADD      r0,r0,r1
00001c  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;154    	REG_ReadV_Offset=REG_ReadV_Offset<<8;
00001e  6820              LDR      r0,[r4,#0]  ; Correct_Strong
000020  0200              LSLS     r0,r0,#8
000022  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;155    	REG_ReadV_Offset=REG_ReadV_Offset+EEPROM_READ_Byte(0x03);
000024  2003              MOVS     r0,#3
000026  f7fffffe          BL       EEPROM_READ_Byte
00002a  6821              LDR      r1,[r4,#0]  ; Correct_Strong
00002c  4408              ADD      r0,r0,r1
00002e  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;156    	REG_ReadV_Offset=REG_ReadV_Offset<<8;
000030  6820              LDR      r0,[r4,#0]  ; Correct_Strong
000032  0200              LSLS     r0,r0,#8
000034  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;157    	REG_ReadV_Offset=REG_ReadV_Offset+EEPROM_READ_Byte(0x04);
000036  2004              MOVS     r0,#4
000038  f7fffffe          BL       EEPROM_READ_Byte
00003c  6821              LDR      r1,[r4,#0]  ; Correct_Strong
00003e  4408              ADD      r0,r0,r1
000040  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;158    	
;;;159    	REG_ReadV1_Offset=EEPROM_READ_Byte(0x40);
000042  2040              MOVS     r0,#0x40
000044  f7fffffe          BL       EEPROM_READ_Byte
000048  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;160    	REG_ReadV1_Offset=REG_ReadV1_Offset<<8;
00004a  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
00004c  0200              LSLS     r0,r0,#8
00004e  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;161    	REG_ReadV1_Offset=REG_ReadV1_Offset+EEPROM_READ_Byte(0x41);
000050  2041              MOVS     r0,#0x41
000052  f7fffffe          BL       EEPROM_READ_Byte
000056  6a21              LDR      r1,[r4,#0x20]  ; Correct_Strong
000058  4408              ADD      r0,r0,r1
00005a  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;162    	REG_ReadV1_Offset=REG_ReadV1_Offset<<8;
00005c  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
00005e  0200              LSLS     r0,r0,#8
000060  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;163    	REG_ReadV1_Offset=REG_ReadV1_Offset+EEPROM_READ_Byte(0x42);
000062  2042              MOVS     r0,#0x42
000064  f7fffffe          BL       EEPROM_READ_Byte
000068  6a21              LDR      r1,[r4,#0x20]  ; Correct_Strong
00006a  4408              ADD      r0,r0,r1
00006c  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;164    	REG_ReadV1_Offset=REG_ReadV1_Offset<<8;
00006e  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
000070  0200              LSLS     r0,r0,#8
000072  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;165    	REG_ReadV1_Offset=REG_ReadV1_Offset+EEPROM_READ_Byte(0x43);
000074  2043              MOVS     r0,#0x43
000076  f7fffffe          BL       EEPROM_READ_Byte
00007a  6a21              LDR      r1,[r4,#0x20]  ; Correct_Strong
00007c  4408              ADD      r0,r0,r1
00007e  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;166    	
;;;167    	REG_ReadA_Offset=EEPROM_READ_Byte(0x05);
000080  2005              MOVS     r0,#5
000082  f7fffffe          BL       EEPROM_READ_Byte
000086  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;168    	REG_ReadA_Offset=REG_ReadA_Offset<<8;
000088  6860              LDR      r0,[r4,#4]  ; Correct_Strong
00008a  0200              LSLS     r0,r0,#8
00008c  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;169    	REG_ReadA_Offset=REG_ReadA_Offset+EEPROM_READ_Byte(0x06);
00008e  2006              MOVS     r0,#6
000090  f7fffffe          BL       EEPROM_READ_Byte
000094  6861              LDR      r1,[r4,#4]  ; Correct_Strong
000096  4408              ADD      r0,r0,r1
000098  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;170    	REG_ReadA_Offset=REG_ReadA_Offset<<8;
00009a  6860              LDR      r0,[r4,#4]  ; Correct_Strong
00009c  0200              LSLS     r0,r0,#8
00009e  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;171    	REG_ReadA_Offset=REG_ReadA_Offset+EEPROM_READ_Byte(0x07);
0000a0  2007              MOVS     r0,#7
0000a2  f7fffffe          BL       EEPROM_READ_Byte
0000a6  6861              LDR      r1,[r4,#4]  ; Correct_Strong
0000a8  4408              ADD      r0,r0,r1
0000aa  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;172    	REG_ReadA_Offset=REG_ReadA_Offset<<8;
0000ac  6860              LDR      r0,[r4,#4]  ; Correct_Strong
0000ae  0200              LSLS     r0,r0,#8
0000b0  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;173    	REG_ReadA_Offset=REG_ReadA_Offset+EEPROM_READ_Byte(0x08);
0000b2  2008              MOVS     r0,#8
0000b4  f7fffffe          BL       EEPROM_READ_Byte
0000b8  6861              LDR      r1,[r4,#4]  ; Correct_Strong
0000ba  4408              ADD      r0,r0,r1
0000bc  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;174    	
;;;175    	REG_ReadA1_Offset=EEPROM_READ_Byte(0x33);
0000be  2033              MOVS     r0,#0x33
0000c0  f7fffffe          BL       EEPROM_READ_Byte
0000c4  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;176    	REG_ReadA1_Offset=REG_ReadA1_Offset<<8;
0000c6  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
0000c8  0200              LSLS     r0,r0,#8
0000ca  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;177    	REG_ReadA1_Offset=REG_ReadA1_Offset+EEPROM_READ_Byte(0x34);
0000cc  2034              MOVS     r0,#0x34
0000ce  f7fffffe          BL       EEPROM_READ_Byte
0000d2  68a1              LDR      r1,[r4,#8]  ; Correct_Strong
0000d4  4408              ADD      r0,r0,r1
0000d6  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;178    	REG_ReadA1_Offset=REG_ReadA1_Offset<<8;
0000d8  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
0000da  0200              LSLS     r0,r0,#8
0000dc  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;179    	REG_ReadA1_Offset=REG_ReadA1_Offset+EEPROM_READ_Byte(0x35);
0000de  2035              MOVS     r0,#0x35
0000e0  f7fffffe          BL       EEPROM_READ_Byte
0000e4  68a1              LDR      r1,[r4,#8]  ; Correct_Strong
0000e6  4408              ADD      r0,r0,r1
0000e8  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;180    	REG_ReadA1_Offset=REG_ReadA1_Offset<<8;
0000ea  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
0000ec  0200              LSLS     r0,r0,#8
0000ee  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;181    	REG_ReadA1_Offset=REG_ReadA1_Offset+EEPROM_READ_Byte(0x36);
0000f0  2036              MOVS     r0,#0x36
0000f2  f7fffffe          BL       EEPROM_READ_Byte
0000f6  68a1              LDR      r1,[r4,#8]  ; Correct_Strong
0000f8  4408              ADD      r0,r0,r1
0000fa  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;182    	
;;;183    	REG_ReadR_Offset=EEPROM_READ_Byte(0x09);
0000fc  2009              MOVS     r0,#9
0000fe  f7fffffe          BL       EEPROM_READ_Byte
000102  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;184    	REG_ReadR_Offset=REG_ReadR_Offset<<8;
000104  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
000106  0200              LSLS     r0,r0,#8
000108  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;185    	REG_ReadR_Offset=REG_ReadR_Offset+EEPROM_READ_Byte(0x0A);
00010a  200a              MOVS     r0,#0xa
00010c  f7fffffe          BL       EEPROM_READ_Byte
000110  68e1              LDR      r1,[r4,#0xc]  ; Correct_Strong
000112  4408              ADD      r0,r0,r1
000114  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;186    	REG_ReadR_Offset=REG_ReadR_Offset<<8;
000116  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
000118  0200              LSLS     r0,r0,#8
00011a  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;187    	REG_ReadR_Offset=REG_ReadR_Offset+EEPROM_READ_Byte(0x0B);
00011c  200b              MOVS     r0,#0xb
00011e  f7fffffe          BL       EEPROM_READ_Byte
000122  68e1              LDR      r1,[r4,#0xc]  ; Correct_Strong
000124  4408              ADD      r0,r0,r1
000126  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;188    	REG_ReadR_Offset=REG_ReadR_Offset<<8;
000128  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
00012a  0200              LSLS     r0,r0,#8
00012c  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;189    	REG_ReadR_Offset=REG_ReadR_Offset+EEPROM_READ_Byte(0x0C);
00012e  200c              MOVS     r0,#0xc
000130  f7fffffe          BL       EEPROM_READ_Byte
000134  68e1              LDR      r1,[r4,#0xc]  ; Correct_Strong
000136  4408              ADD      r0,r0,r1
000138  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;190    	
;;;191    	REG_CorrectionV=EEPROM_READ_Byte(0x0D);
00013a  200d              MOVS     r0,#0xd
00013c  f7fffffe          BL       EEPROM_READ_Byte
000140  4d91              LDR      r5,|L1.904|
000142  8028              STRH     r0,[r5,#0]
;;;192    	REG_CorrectionV=REG_CorrectionV<<8;
000144  8828              LDRH     r0,[r5,#0]  ; Correct_Parametet
000146  0200              LSLS     r0,r0,#8
000148  8028              STRH     r0,[r5,#0]
;;;193    	REG_CorrectionV=REG_CorrectionV+EEPROM_READ_Byte(0x0E);
00014a  200e              MOVS     r0,#0xe
00014c  f7fffffe          BL       EEPROM_READ_Byte
000150  8829              LDRH     r1,[r5,#0]  ; Correct_Parametet
000152  4408              ADD      r0,r0,r1
000154  8028              STRH     r0,[r5,#0]
;;;194    	
;;;195    	REG_CorrectionV1=EEPROM_READ_Byte(0x44);
000156  2044              MOVS     r0,#0x44
000158  f7fffffe          BL       EEPROM_READ_Byte
00015c  8328              STRH     r0,[r5,#0x18]
;;;196    	REG_CorrectionV1=REG_CorrectionV1<<8;
00015e  8b28              LDRH     r0,[r5,#0x18]  ; Correct_Parametet
000160  0200              LSLS     r0,r0,#8
000162  8328              STRH     r0,[r5,#0x18]
;;;197    	REG_CorrectionV1=REG_CorrectionV1+EEPROM_READ_Byte(0x45);
000164  2045              MOVS     r0,#0x45
000166  f7fffffe          BL       EEPROM_READ_Byte
00016a  8b29              LDRH     r1,[r5,#0x18]  ; Correct_Parametet
00016c  4408              ADD      r0,r0,r1
00016e  8328              STRH     r0,[r5,#0x18]
;;;198    	
;;;199    	REG_CorrectionA=EEPROM_READ_Byte(0x0F);
000170  200f              MOVS     r0,#0xf
000172  f7fffffe          BL       EEPROM_READ_Byte
000176  8068              STRH     r0,[r5,#2]
;;;200    	REG_CorrectionA=REG_CorrectionA<<8;
000178  8868              LDRH     r0,[r5,#2]  ; Correct_Parametet
00017a  0200              LSLS     r0,r0,#8
00017c  8068              STRH     r0,[r5,#2]
;;;201    	REG_CorrectionA=REG_CorrectionA+EEPROM_READ_Byte(0x10);
00017e  2010              MOVS     r0,#0x10
000180  f7fffffe          BL       EEPROM_READ_Byte
000184  8869              LDRH     r1,[r5,#2]  ; Correct_Parametet
000186  4408              ADD      r0,r0,r1
000188  8068              STRH     r0,[r5,#2]
;;;202    	
;;;203    	REG_CorrectionA1=EEPROM_READ_Byte(0x37);
00018a  2037              MOVS     r0,#0x37
00018c  f7fffffe          BL       EEPROM_READ_Byte
000190  80a8              STRH     r0,[r5,#4]
;;;204    	REG_CorrectionA1=REG_CorrectionA1<<8;
000192  88a8              LDRH     r0,[r5,#4]  ; Correct_Parametet
000194  0200              LSLS     r0,r0,#8
000196  80a8              STRH     r0,[r5,#4]
;;;205    	REG_CorrectionA1=REG_CorrectionA1+EEPROM_READ_Byte(0x38);
000198  2038              MOVS     r0,#0x38
00019a  f7fffffe          BL       EEPROM_READ_Byte
00019e  88a9              LDRH     r1,[r5,#4]  ; Correct_Parametet
0001a0  4408              ADD      r0,r0,r1
0001a2  80a8              STRH     r0,[r5,#4]
;;;206    	
;;;207    	REG_CorrectionR=EEPROM_READ_Byte(0x11);
0001a4  2011              MOVS     r0,#0x11
0001a6  f7fffffe          BL       EEPROM_READ_Byte
0001aa  80e8              STRH     r0,[r5,#6]
;;;208    	REG_CorrectionR=REG_CorrectionR<<8;
0001ac  88e8              LDRH     r0,[r5,#6]  ; Correct_Parametet
0001ae  0200              LSLS     r0,r0,#8
0001b0  80e8              STRH     r0,[r5,#6]
;;;209    	REG_CorrectionR=REG_CorrectionR+EEPROM_READ_Byte(0x12);
0001b2  2012              MOVS     r0,#0x12
0001b4  f7fffffe          BL       EEPROM_READ_Byte
0001b8  88e9              LDRH     r1,[r5,#6]  ; Correct_Parametet
0001ba  4408              ADD      r0,r0,r1
0001bc  80e8              STRH     r0,[r5,#6]
;;;210    	
;;;211    	Polar=EEPROM_READ_Byte(0x13);
0001be  2013              MOVS     r0,#0x13
0001c0  f7fffffe          BL       EEPROM_READ_Byte
0001c4  8128              STRH     r0,[r5,#8]
;;;212    	Polar3=EEPROM_READ_Byte(0x46);
0001c6  2046              MOVS     r0,#0x46
0001c8  f7fffffe          BL       EEPROM_READ_Byte
0001cc  82e8              STRH     r0,[r5,#0x16]
;;;213    /*******************设置参数读取****************************/
;;;214    	SET_ReadV_Offset=EEPROM_READ_Byte(0x14);
0001ce  2014              MOVS     r0,#0x14
0001d0  f7fffffe          BL       EEPROM_READ_Byte
0001d4  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;215    	SET_ReadV_Offset=SET_ReadV_Offset<<8;
0001d6  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
0001d8  0200              LSLS     r0,r0,#8
0001da  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;216    	SET_ReadV_Offset=SET_ReadV_Offset+EEPROM_READ_Byte(0x15);
0001dc  2015              MOVS     r0,#0x15
0001de  f7fffffe          BL       EEPROM_READ_Byte
0001e2  6921              LDR      r1,[r4,#0x10]  ; Correct_Strong
0001e4  4408              ADD      r0,r0,r1
0001e6  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;217    	SET_ReadV_Offset=SET_ReadV_Offset<<8;
0001e8  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
0001ea  0200              LSLS     r0,r0,#8
0001ec  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;218    	SET_ReadV_Offset=SET_ReadV_Offset+EEPROM_READ_Byte(0x16);
0001ee  2016              MOVS     r0,#0x16
0001f0  f7fffffe          BL       EEPROM_READ_Byte
0001f4  6921              LDR      r1,[r4,#0x10]  ; Correct_Strong
0001f6  4408              ADD      r0,r0,r1
0001f8  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;219    	SET_ReadV_Offset=SET_ReadV_Offset<<8;
0001fa  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
0001fc  0200              LSLS     r0,r0,#8
0001fe  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;220    	SET_ReadV_Offset=SET_ReadV_Offset+EEPROM_READ_Byte(0x17);
000200  2017              MOVS     r0,#0x17
000202  f7fffffe          BL       EEPROM_READ_Byte
000206  6921              LDR      r1,[r4,#0x10]  ; Correct_Strong
000208  4408              ADD      r0,r0,r1
00020a  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;221    	
;;;222    	SET_ReadA_Offset=EEPROM_READ_Byte(0x18);
00020c  2018              MOVS     r0,#0x18
00020e  f7fffffe          BL       EEPROM_READ_Byte
000212  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;223    	SET_ReadA_Offset=SET_ReadA_Offset<<8;
000214  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
000216  0200              LSLS     r0,r0,#8
000218  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;224    	SET_ReadA_Offset=SET_ReadA_Offset+EEPROM_READ_Byte(0x19);
00021a  2019              MOVS     r0,#0x19
00021c  f7fffffe          BL       EEPROM_READ_Byte
000220  6961              LDR      r1,[r4,#0x14]  ; Correct_Strong
000222  4408              ADD      r0,r0,r1
000224  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;225    	SET_ReadA_Offset=SET_ReadA_Offset<<8;
000226  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
000228  0200              LSLS     r0,r0,#8
00022a  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;226    	SET_ReadA_Offset=SET_ReadA_Offset+EEPROM_READ_Byte(0x1A);
00022c  201a              MOVS     r0,#0x1a
00022e  f7fffffe          BL       EEPROM_READ_Byte
000232  6961              LDR      r1,[r4,#0x14]  ; Correct_Strong
000234  4408              ADD      r0,r0,r1
000236  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;227    	SET_ReadA_Offset=SET_ReadA_Offset<<8;
000238  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
00023a  0200              LSLS     r0,r0,#8
00023c  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;228    	SET_ReadA_Offset=SET_ReadA_Offset+EEPROM_READ_Byte(0x1B);
00023e  201b              MOVS     r0,#0x1b
000240  f7fffffe          BL       EEPROM_READ_Byte
000244  6961              LDR      r1,[r4,#0x14]  ; Correct_Strong
000246  4408              ADD      r0,r0,r1
000248  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;229    	
;;;230    	SET_ReadA1_Offset=EEPROM_READ_Byte(0x39);
00024a  2039              MOVS     r0,#0x39
00024c  f7fffffe          BL       EEPROM_READ_Byte
000250  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;231    	SET_ReadA1_Offset=SET_ReadA1_Offset<<8;
000252  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
000254  0200              LSLS     r0,r0,#8
000256  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;232    	SET_ReadA1_Offset=SET_ReadA1_Offset+EEPROM_READ_Byte(0x3A);
000258  203a              MOVS     r0,#0x3a
00025a  f7fffffe          BL       EEPROM_READ_Byte
00025e  69a1              LDR      r1,[r4,#0x18]  ; Correct_Strong
000260  4408              ADD      r0,r0,r1
000262  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;233    	SET_ReadA1_Offset=SET_ReadA1_Offset<<8;
000264  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
000266  0200              LSLS     r0,r0,#8
000268  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;234    	SET_ReadA1_Offset=SET_ReadA1_Offset+EEPROM_READ_Byte(0x3B);
00026a  203b              MOVS     r0,#0x3b
00026c  f7fffffe          BL       EEPROM_READ_Byte
000270  69a1              LDR      r1,[r4,#0x18]  ; Correct_Strong
000272  4408              ADD      r0,r0,r1
000274  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;235    	SET_ReadA1_Offset=SET_ReadA1_Offset<<8;
000276  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
000278  0200              LSLS     r0,r0,#8
00027a  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;236    	SET_ReadA1_Offset=SET_ReadA1_Offset+EEPROM_READ_Byte(0x3C);
00027c  203c              MOVS     r0,#0x3c
00027e  f7fffffe          BL       EEPROM_READ_Byte
000282  69a1              LDR      r1,[r4,#0x18]  ; Correct_Strong
000284  4408              ADD      r0,r0,r1
000286  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;237    	
;;;238    	SET_CorrectionV=EEPROM_READ_Byte(0x1C);
000288  201c              MOVS     r0,#0x1c
00028a  f7fffffe          BL       EEPROM_READ_Byte
00028e  8168              STRH     r0,[r5,#0xa]
;;;239    	SET_CorrectionV=SET_CorrectionV<<8;
000290  8968              LDRH     r0,[r5,#0xa]  ; Correct_Parametet
000292  0200              LSLS     r0,r0,#8
000294  8168              STRH     r0,[r5,#0xa]
;;;240    	SET_CorrectionV=SET_CorrectionV+EEPROM_READ_Byte(0x1D);
000296  201d              MOVS     r0,#0x1d
000298  f7fffffe          BL       EEPROM_READ_Byte
00029c  8969              LDRH     r1,[r5,#0xa]  ; Correct_Parametet
00029e  4408              ADD      r0,r0,r1
0002a0  8168              STRH     r0,[r5,#0xa]
;;;241    	
;;;242    	SET_CorrectionA=EEPROM_READ_Byte(0x1E);
0002a2  201e              MOVS     r0,#0x1e
0002a4  f7fffffe          BL       EEPROM_READ_Byte
0002a8  81a8              STRH     r0,[r5,#0xc]
;;;243    	SET_CorrectionA=SET_CorrectionA<<8;
0002aa  89a8              LDRH     r0,[r5,#0xc]  ; Correct_Parametet
0002ac  0200              LSLS     r0,r0,#8
0002ae  81a8              STRH     r0,[r5,#0xc]
;;;244    	SET_CorrectionA=SET_CorrectionA+EEPROM_READ_Byte(0x1F);
0002b0  201f              MOVS     r0,#0x1f
0002b2  f7fffffe          BL       EEPROM_READ_Byte
0002b6  89a9              LDRH     r1,[r5,#0xc]  ; Correct_Parametet
0002b8  4408              ADD      r0,r0,r1
0002ba  81a8              STRH     r0,[r5,#0xc]
;;;245    	
;;;246    	SET_CorrectionA1=EEPROM_READ_Byte(0x3D);
0002bc  203d              MOVS     r0,#0x3d
0002be  f7fffffe          BL       EEPROM_READ_Byte
0002c2  81e8              STRH     r0,[r5,#0xe]
;;;247    	SET_CorrectionA1=SET_CorrectionA1<<8;
0002c4  89e8              LDRH     r0,[r5,#0xe]  ; Correct_Parametet
0002c6  0200              LSLS     r0,r0,#8
0002c8  81e8              STRH     r0,[r5,#0xe]
;;;248    	SET_CorrectionA1=SET_CorrectionA1+EEPROM_READ_Byte(0x3E);
0002ca  203e              MOVS     r0,#0x3e
0002cc  f7fffffe          BL       EEPROM_READ_Byte
0002d0  89e9              LDRH     r1,[r5,#0xe]  ; Correct_Parametet
0002d2  4408              ADD      r0,r0,r1
0002d4  81e8              STRH     r0,[r5,#0xe]
;;;249    	
;;;250    	
;;;251    	Polar1=EEPROM_READ_Byte(0x20);
0002d6  2020              MOVS     r0,#0x20
0002d8  f7fffffe          BL       EEPROM_READ_Byte
0002dc  8268              STRH     r0,[r5,#0x12]
;;;252    	
;;;253    	CON_CorrectionA=EEPROM_READ_Byte(0x21);
0002de  2021              MOVS     r0,#0x21
0002e0  f7fffffe          BL       EEPROM_READ_Byte
0002e4  8228              STRH     r0,[r5,#0x10]
;;;254    	CON_CorrectionA=CON_CorrectionA<<8;
0002e6  8a28              LDRH     r0,[r5,#0x10]  ; Correct_Parametet
0002e8  0200              LSLS     r0,r0,#8
0002ea  8228              STRH     r0,[r5,#0x10]
;;;255    	CON_CorrectionA=CON_CorrectionA+EEPROM_READ_Byte(0x22);
0002ec  2022              MOVS     r0,#0x22
0002ee  f7fffffe          BL       EEPROM_READ_Byte
0002f2  8a29              LDRH     r1,[r5,#0x10]  ; Correct_Parametet
0002f4  4408              ADD      r0,r0,r1
0002f6  8228              STRH     r0,[r5,#0x10]
;;;256    	
;;;257    	CON_ReadA_Offset=EEPROM_READ_Byte(0x23);
0002f8  2023              MOVS     r0,#0x23
0002fa  f7fffffe          BL       EEPROM_READ_Byte
0002fe  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;258    	CON_ReadA_Offset=CON_ReadA_Offset<<8;
000300  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
000302  0200              LSLS     r0,r0,#8
000304  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;259    	CON_ReadA_Offset=CON_ReadA_Offset+EEPROM_READ_Byte(0x24);
000306  2024              MOVS     r0,#0x24
000308  f7fffffe          BL       EEPROM_READ_Byte
00030c  69e1              LDR      r1,[r4,#0x1c]  ; Correct_Strong
00030e  4408              ADD      r0,r0,r1
000310  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;260    	CON_ReadA_Offset=CON_ReadA_Offset<<8;
000312  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
000314  0200              LSLS     r0,r0,#8
000316  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;261    	CON_ReadA_Offset=CON_ReadA_Offset+EEPROM_READ_Byte(0x25);
000318  2025              MOVS     r0,#0x25
00031a  f7fffffe          BL       EEPROM_READ_Byte
00031e  69e1              LDR      r1,[r4,#0x1c]  ; Correct_Strong
000320  4408              ADD      r0,r0,r1
000322  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;262    	CON_ReadA_Offset=CON_ReadA_Offset<<8;
000324  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
000326  0200              LSLS     r0,r0,#8
000328  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;263    	CON_ReadA_Offset=CON_ReadA_Offset+EEPROM_READ_Byte(0x26);
00032a  2026              MOVS     r0,#0x26
00032c  f7fffffe          BL       EEPROM_READ_Byte
000330  69e1              LDR      r1,[r4,#0x1c]  ; Correct_Strong
000332  4408              ADD      r0,r0,r1
000334  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;264    	Polar2=EEPROM_READ_Byte(0x27);
000336  2027              MOVS     r0,#0x27
000338  f7fffffe          BL       EEPROM_READ_Byte
00033c  82a8              STRH     r0,[r5,#0x14]
;;;265    	
;;;266    /*****************读取关机前设置值*************************/
;;;267    	//SET_Voltage=EEPROM_READ_Byte(0x2A);
;;;268    	//SET_Voltage=SET_Voltage<<8;
;;;269    	//SET_Voltage=SET_Voltage+EEPROM_READ_Byte(0x2B);
;;;270    	
;;;271    	//SET_Current=EEPROM_READ_Byte(0x2C);
;;;272    	//SET_Current=SET_Current<<8;
;;;273    	//SET_Current=SET_Current+EEPROM_READ_Byte(0x2D);
;;;274    	
;;;275    	TEMP_OFFSET=EEPROM_READ_Byte(0x28);
00033e  2028              MOVS     r0,#0x28
000340  f7fffffe          BL       EEPROM_READ_Byte
000344  4c11              LDR      r4,|L1.908|
000346  8020              STRH     r0,[r4,#0]
;;;276    	TEMP_OFFSET=TEMP_OFFSET<<8;
000348  8820              LDRH     r0,[r4,#0]  ; TEMP_OFFSET
00034a  0200              LSLS     r0,r0,#8
00034c  8020              STRH     r0,[r4,#0]
;;;277    	TEMP_OFFSET=TEMP_OFFSET+EEPROM_READ_Byte(0x29);
00034e  2029              MOVS     r0,#0x29
000350  f7fffffe          BL       EEPROM_READ_Byte
000354  8821              LDRH     r1,[r4,#0]  ; TEMP_OFFSET
000356  4408              ADD      r0,r0,r1
000358  8020              STRH     r0,[r4,#0]
;;;278    
;;;279    /*****************读取蜂鸣器状态*************************/
;;;280    	//Beep_Flag=EEPROM_READ_Byte(0x2E);
;;;281    	//t_beep=EEPROM_READ_Byte(0x2F);
;;;282    	//if(Beep_Flag==0xff)
;;;283    	//{
;;;284    		//Flag_Beep_OFF=1;
;;;285    	//}
;;;286    	///else
;;;287    	//{
;;;288    		//Flag_Beep_OFF=0;
;;;289    	//}
;;;290    	t_lock=EEPROM_READ_Byte(0x30);
00035a  2030              MOVS     r0,#0x30
00035c  f7fffffe          BL       EEPROM_READ_Byte
000360  490b              LDR      r1,|L1.912|
000362  7008              STRB     r0,[r1,#0]
;;;291    	/***************读本机地址*********************************/
;;;292    	ADDR=EEPROM_READ_Byte(0x31);
000364  2031              MOVS     r0,#0x31
000366  f7fffffe          BL       EEPROM_READ_Byte
00036a  490a              LDR      r1,|L1.916|
00036c  7008              STRB     r0,[r1,#0]
;;;293    	OFFSET_Zore=EEPROM_READ_Byte(0x32);
00036e  2032              MOVS     r0,#0x32
000370  f7fffffe          BL       EEPROM_READ_Byte
000374  4908              LDR      r1,|L1.920|
000376  7008              STRB     r0,[r1,#0]
;;;294    	if(OFFSET_Zore>10)
000378  7808              LDRB     r0,[r1,#0]  ; OFFSET_Zore
00037a  280a              CMP      r0,#0xa
00037c  d901              BLS      |L1.898|
;;;295    	{
;;;296    		OFFSET_Zore=0;
00037e  2000              MOVS     r0,#0
000380  7008              STRB     r0,[r1,#0]
                  |L1.898|
;;;297    	}
;;;298    }
000382  bd70              POP      {r4-r6,pc}
;;;299    /****************************************************************************/
                          ENDP

                  |L1.900|
                          DCD      Correct_Strong
                  |L1.904|
                          DCD      Correct_Parametet
                  |L1.908|
                          DCD      TEMP_OFFSET
                  |L1.912|
                          DCD      t_lock
                  |L1.916|
                          DCD      ADDR
                  |L1.920|
                          DCD      OFFSET_Zore

                          AREA ||i.Flash_Write_all||, CODE, READONLY, ALIGN=2

                  Flash_Write_all PROC
;;;23     //==================================================================//
;;;24     void Flash_Write_all (void)
000000  b570              PUSH     {r4-r6,lr}
;;;25     {
;;;26     	vu8 data_8bit;
;;;27     /***********************测量数据存储****************************/
;;;28       data_8bit = REG_ReadV_Offset >> 24;
000002  4ca1              LDR      r4,|L2.648|
000004  6820              LDR      r0,[r4,#0]  ; Correct_Strong
000006  0e01              LSRS     r1,r0,#24
;;;29     	EEPROM_WriteByte(0x01, data_8bit);
000008  2001              MOVS     r0,#1
00000a  f7fffffe          BL       EEPROM_WriteByte
;;;30     	data_8bit = REG_ReadV_Offset >> 16;
00000e  6820              LDR      r0,[r4,#0]  ; Correct_Strong
000010  f3c04107          UBFX     r1,r0,#16,#8
;;;31     	EEPROM_WriteByte(0x02, data_8bit);
000014  2002              MOVS     r0,#2
000016  f7fffffe          BL       EEPROM_WriteByte
;;;32     	data_8bit = REG_ReadV_Offset >> 8;
00001a  6820              LDR      r0,[r4,#0]  ; Correct_Strong
00001c  f3c02107          UBFX     r1,r0,#8,#8
;;;33     	EEPROM_WriteByte(0x03, data_8bit);
000020  2003              MOVS     r0,#3
000022  f7fffffe          BL       EEPROM_WriteByte
;;;34     	EEPROM_WriteByte(0x04, REG_ReadV_Offset);//测量电压
000026  6820              LDR      r0,[r4,#0]  ; Correct_Strong
000028  b2c1              UXTB     r1,r0
00002a  2004              MOVS     r0,#4
00002c  f7fffffe          BL       EEPROM_WriteByte
;;;35     	
;;;36     	data_8bit = REG_ReadA_Offset >> 24;
000030  6860              LDR      r0,[r4,#4]  ; Correct_Strong
000032  0e01              LSRS     r1,r0,#24
;;;37     	EEPROM_WriteByte(0x05, data_8bit);
000034  2005              MOVS     r0,#5
000036  f7fffffe          BL       EEPROM_WriteByte
;;;38     	data_8bit = REG_ReadA_Offset >> 16;
00003a  6860              LDR      r0,[r4,#4]  ; Correct_Strong
00003c  f3c04107          UBFX     r1,r0,#16,#8
;;;39     	EEPROM_WriteByte(0x06, data_8bit);
000040  2006              MOVS     r0,#6
000042  f7fffffe          BL       EEPROM_WriteByte
;;;40     	data_8bit = REG_ReadA_Offset >> 8;
000046  6860              LDR      r0,[r4,#4]  ; Correct_Strong
000048  f3c02107          UBFX     r1,r0,#8,#8
;;;41     	EEPROM_WriteByte(0x07, data_8bit);
00004c  2007              MOVS     r0,#7
00004e  f7fffffe          BL       EEPROM_WriteByte
;;;42     	EEPROM_WriteByte(0x08, REG_ReadA_Offset);//电源电流
000052  6860              LDR      r0,[r4,#4]  ; Correct_Strong
000054  b2c1              UXTB     r1,r0
000056  2008              MOVS     r0,#8
000058  f7fffffe          BL       EEPROM_WriteByte
;;;43     	
;;;44     	data_8bit = REG_ReadA1_Offset >> 24;
00005c  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
00005e  0e01              LSRS     r1,r0,#24
;;;45     	EEPROM_WriteByte(0x33, data_8bit);
000060  2033              MOVS     r0,#0x33
000062  f7fffffe          BL       EEPROM_WriteByte
;;;46     	data_8bit = REG_ReadA1_Offset >> 16;
000066  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
000068  f3c04107          UBFX     r1,r0,#16,#8
;;;47     	EEPROM_WriteByte(0x34, data_8bit);
00006c  2034              MOVS     r0,#0x34
00006e  f7fffffe          BL       EEPROM_WriteByte
;;;48     	data_8bit = REG_ReadA1_Offset >> 8;
000072  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
000074  f3c02107          UBFX     r1,r0,#8,#8
;;;49     	EEPROM_WriteByte(0x35, data_8bit);
000078  2035              MOVS     r0,#0x35
00007a  f7fffffe          BL       EEPROM_WriteByte
;;;50     	EEPROM_WriteByte(0x36, REG_ReadA1_Offset);//负载电流
00007e  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
000080  b2c1              UXTB     r1,r0
000082  2036              MOVS     r0,#0x36
000084  f7fffffe          BL       EEPROM_WriteByte
;;;51     	
;;;52     	data_8bit = REG_ReadR_Offset >> 24;
000088  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
00008a  0e01              LSRS     r1,r0,#24
;;;53     	EEPROM_WriteByte(0x09, data_8bit);
00008c  2009              MOVS     r0,#9
00008e  f7fffffe          BL       EEPROM_WriteByte
;;;54     	data_8bit = REG_ReadR_Offset >> 16;
000092  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
000094  f3c04107          UBFX     r1,r0,#16,#8
;;;55     	EEPROM_WriteByte(0x0A, data_8bit);
000098  200a              MOVS     r0,#0xa
00009a  f7fffffe          BL       EEPROM_WriteByte
;;;56     	data_8bit = REG_ReadR_Offset >> 8;
00009e  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
0000a0  f3c02107          UBFX     r1,r0,#8,#8
;;;57     	EEPROM_WriteByte(0x0B, data_8bit);
0000a4  200b              MOVS     r0,#0xb
0000a6  f7fffffe          BL       EEPROM_WriteByte
;;;58     	EEPROM_WriteByte(0x0C, REG_ReadR_Offset);//内阻
0000aa  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
0000ac  b2c1              UXTB     r1,r0
0000ae  200c              MOVS     r0,#0xc
0000b0  f7fffffe          BL       EEPROM_WriteByte
;;;59     	
;;;60     	data_8bit = REG_ReadV1_Offset >> 24;
0000b4  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
0000b6  0e01              LSRS     r1,r0,#24
;;;61     	EEPROM_WriteByte(0x40, data_8bit);
0000b8  2040              MOVS     r0,#0x40
0000ba  f7fffffe          BL       EEPROM_WriteByte
;;;62     	data_8bit = REG_ReadV1_Offset >> 16;
0000be  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
0000c0  f3c04107          UBFX     r1,r0,#16,#8
;;;63     	EEPROM_WriteByte(0x41, data_8bit);
0000c4  2041              MOVS     r0,#0x41
0000c6  f7fffffe          BL       EEPROM_WriteByte
;;;64     	data_8bit = REG_ReadV1_Offset >> 8;
0000ca  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
0000cc  f3c02107          UBFX     r1,r0,#8,#8
;;;65     	EEPROM_WriteByte(0x42, data_8bit);
0000d0  2042              MOVS     r0,#0x42
0000d2  f7fffffe          BL       EEPROM_WriteByte
;;;66     	EEPROM_WriteByte(0x43, REG_ReadV1_Offset);//电源电压*
0000d6  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
0000d8  b2c1              UXTB     r1,r0
0000da  2043              MOVS     r0,#0x43
0000dc  f7fffffe          BL       EEPROM_WriteByte
;;;67     	
;;;68     	data_8bit=REG_CorrectionV>>8;
0000e0  4d6a              LDR      r5,|L2.652|
0000e2  8828              LDRH     r0,[r5,#0]  ; Correct_Parametet
0000e4  0a01              LSRS     r1,r0,#8
;;;69     	EEPROM_WriteByte(0x0D, data_8bit);
0000e6  200d              MOVS     r0,#0xd
0000e8  f7fffffe          BL       EEPROM_WriteByte
;;;70     	EEPROM_WriteByte(0x0E, REG_CorrectionV);
0000ec  8828              LDRH     r0,[r5,#0]  ; Correct_Parametet
0000ee  b2c1              UXTB     r1,r0
0000f0  200e              MOVS     r0,#0xe
0000f2  f7fffffe          BL       EEPROM_WriteByte
;;;71     	
;;;72     	data_8bit=REG_CorrectionA>>8;
0000f6  8868              LDRH     r0,[r5,#2]  ; Correct_Parametet
0000f8  0a01              LSRS     r1,r0,#8
;;;73     	EEPROM_WriteByte(0x0F, data_8bit);
0000fa  200f              MOVS     r0,#0xf
0000fc  f7fffffe          BL       EEPROM_WriteByte
;;;74     	EEPROM_WriteByte(0x10, REG_CorrectionA);
000100  8868              LDRH     r0,[r5,#2]  ; Correct_Parametet
000102  b2c1              UXTB     r1,r0
000104  2010              MOVS     r0,#0x10
000106  f7fffffe          BL       EEPROM_WriteByte
;;;75     	
;;;76     	data_8bit=REG_CorrectionA1>>8;
00010a  88a8              LDRH     r0,[r5,#4]  ; Correct_Parametet
00010c  0a01              LSRS     r1,r0,#8
;;;77     	EEPROM_WriteByte(0x37, data_8bit);
00010e  2037              MOVS     r0,#0x37
000110  f7fffffe          BL       EEPROM_WriteByte
;;;78     	EEPROM_WriteByte(0x38, REG_CorrectionA1);
000114  88a8              LDRH     r0,[r5,#4]  ; Correct_Parametet
000116  b2c1              UXTB     r1,r0
000118  2038              MOVS     r0,#0x38
00011a  f7fffffe          BL       EEPROM_WriteByte
;;;79     	
;;;80     	data_8bit=REG_CorrectionR>>8;
00011e  88e8              LDRH     r0,[r5,#6]  ; Correct_Parametet
000120  0a01              LSRS     r1,r0,#8
;;;81     	EEPROM_WriteByte(0x11, data_8bit);
000122  2011              MOVS     r0,#0x11
000124  f7fffffe          BL       EEPROM_WriteByte
;;;82     	EEPROM_WriteByte(0x12, REG_CorrectionR);
000128  88e8              LDRH     r0,[r5,#6]  ; Correct_Parametet
00012a  b2c1              UXTB     r1,r0
00012c  2012              MOVS     r0,#0x12
00012e  f7fffffe          BL       EEPROM_WriteByte
;;;83     	
;;;84     	data_8bit=REG_CorrectionV1>>8;
000132  8b28              LDRH     r0,[r5,#0x18]  ; Correct_Parametet
000134  0a01              LSRS     r1,r0,#8
;;;85     	EEPROM_WriteByte(0x44, data_8bit);
000136  2044              MOVS     r0,#0x44
000138  f7fffffe          BL       EEPROM_WriteByte
;;;86     	EEPROM_WriteByte(0x45, REG_CorrectionV1);//电源电压*
00013c  8b28              LDRH     r0,[r5,#0x18]  ; Correct_Parametet
00013e  b2c1              UXTB     r1,r0
000140  2045              MOVS     r0,#0x45
000142  f7fffffe          BL       EEPROM_WriteByte
;;;87     	
;;;88     	EEPROM_WriteByte(0x13,Polar);
000146  8928              LDRH     r0,[r5,#8]  ; Correct_Parametet
000148  b2c1              UXTB     r1,r0
00014a  2013              MOVS     r0,#0x13
00014c  f7fffffe          BL       EEPROM_WriteByte
;;;89     	EEPROM_WriteByte(0x46,Polar3);//电源电压*
000150  8ae8              LDRH     r0,[r5,#0x16]  ; Correct_Parametet
000152  b2c1              UXTB     r1,r0
000154  2046              MOVS     r0,#0x46
000156  f7fffffe          BL       EEPROM_WriteByte
;;;90     /***********************设置数据存储****************************/
;;;91     	data_8bit = SET_ReadV_Offset >> 24;
00015a  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
00015c  0e01              LSRS     r1,r0,#24
;;;92     	EEPROM_WriteByte(0x14, data_8bit);
00015e  2014              MOVS     r0,#0x14
000160  f7fffffe          BL       EEPROM_WriteByte
;;;93     	data_8bit = SET_ReadV_Offset >> 16;
000164  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
000166  f3c04107          UBFX     r1,r0,#16,#8
;;;94     	EEPROM_WriteByte(0x15, data_8bit);
00016a  2015              MOVS     r0,#0x15
00016c  f7fffffe          BL       EEPROM_WriteByte
;;;95     	data_8bit = SET_ReadV_Offset >> 8;
000170  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
000172  f3c02107          UBFX     r1,r0,#8,#8
;;;96     	EEPROM_WriteByte(0x16, data_8bit);
000176  2016              MOVS     r0,#0x16
000178  f7fffffe          BL       EEPROM_WriteByte
;;;97     	EEPROM_WriteByte(0x17, SET_ReadV_Offset);
00017c  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
00017e  b2c1              UXTB     r1,r0
000180  2017              MOVS     r0,#0x17
000182  f7fffffe          BL       EEPROM_WriteByte
;;;98     	
;;;99     	data_8bit = SET_ReadA_Offset >> 24;
000186  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
000188  0e01              LSRS     r1,r0,#24
;;;100    	EEPROM_WriteByte(0x18, data_8bit);
00018a  2018              MOVS     r0,#0x18
00018c  f7fffffe          BL       EEPROM_WriteByte
;;;101    	data_8bit = SET_ReadA_Offset >> 16;
000190  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
000192  f3c04107          UBFX     r1,r0,#16,#8
;;;102    	EEPROM_WriteByte(0x19, data_8bit);
000196  2019              MOVS     r0,#0x19
000198  f7fffffe          BL       EEPROM_WriteByte
;;;103    	data_8bit = SET_ReadA_Offset >> 8;
00019c  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
00019e  f3c02107          UBFX     r1,r0,#8,#8
;;;104    	EEPROM_WriteByte(0x1A, data_8bit);
0001a2  201a              MOVS     r0,#0x1a
0001a4  f7fffffe          BL       EEPROM_WriteByte
;;;105    	EEPROM_WriteByte(0x1B, SET_ReadA_Offset);
0001a8  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
0001aa  b2c1              UXTB     r1,r0
0001ac  201b              MOVS     r0,#0x1b
0001ae  f7fffffe          BL       EEPROM_WriteByte
;;;106    	
;;;107    	data_8bit = SET_ReadA1_Offset >> 24;
0001b2  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
0001b4  0e01              LSRS     r1,r0,#24
;;;108    	EEPROM_WriteByte(0x39, data_8bit);
0001b6  2039              MOVS     r0,#0x39
0001b8  f7fffffe          BL       EEPROM_WriteByte
;;;109    	data_8bit = SET_ReadA1_Offset >> 16;
0001bc  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
0001be  f3c04107          UBFX     r1,r0,#16,#8
;;;110    	EEPROM_WriteByte(0x3A, data_8bit);
0001c2  203a              MOVS     r0,#0x3a
0001c4  f7fffffe          BL       EEPROM_WriteByte
;;;111    	data_8bit = SET_ReadA1_Offset >> 8;
0001c8  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
0001ca  f3c02107          UBFX     r1,r0,#8,#8
;;;112    	EEPROM_WriteByte(0x3B, data_8bit);
0001ce  203b              MOVS     r0,#0x3b
0001d0  f7fffffe          BL       EEPROM_WriteByte
;;;113    	EEPROM_WriteByte(0x3C, SET_ReadA1_Offset);
0001d4  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
0001d6  b2c1              UXTB     r1,r0
0001d8  203c              MOVS     r0,#0x3c
0001da  f7fffffe          BL       EEPROM_WriteByte
;;;114    	
;;;115    	data_8bit=SET_CorrectionV>>8;
0001de  8968              LDRH     r0,[r5,#0xa]  ; Correct_Parametet
0001e0  0a01              LSRS     r1,r0,#8
;;;116    	EEPROM_WriteByte(0x1C, data_8bit);
0001e2  201c              MOVS     r0,#0x1c
0001e4  f7fffffe          BL       EEPROM_WriteByte
;;;117    	EEPROM_WriteByte(0x1D, SET_CorrectionV);
0001e8  8968              LDRH     r0,[r5,#0xa]  ; Correct_Parametet
0001ea  b2c1              UXTB     r1,r0
0001ec  201d              MOVS     r0,#0x1d
0001ee  f7fffffe          BL       EEPROM_WriteByte
;;;118    	
;;;119    	data_8bit=SET_CorrectionA>>8;
0001f2  89a8              LDRH     r0,[r5,#0xc]  ; Correct_Parametet
0001f4  0a01              LSRS     r1,r0,#8
;;;120    	EEPROM_WriteByte(0x1E, data_8bit);
0001f6  201e              MOVS     r0,#0x1e
0001f8  f7fffffe          BL       EEPROM_WriteByte
;;;121    	EEPROM_WriteByte(0x1F, SET_CorrectionA);
0001fc  89a8              LDRH     r0,[r5,#0xc]  ; Correct_Parametet
0001fe  b2c1              UXTB     r1,r0
000200  201f              MOVS     r0,#0x1f
000202  f7fffffe          BL       EEPROM_WriteByte
;;;122    	
;;;123    	data_8bit=SET_CorrectionA1>>8;
000206  89e8              LDRH     r0,[r5,#0xe]  ; Correct_Parametet
000208  0a01              LSRS     r1,r0,#8
;;;124    	EEPROM_WriteByte(0x3D, data_8bit);
00020a  203d              MOVS     r0,#0x3d
00020c  f7fffffe          BL       EEPROM_WriteByte
;;;125    	EEPROM_WriteByte(0x3E, SET_CorrectionA1);
000210  89e8              LDRH     r0,[r5,#0xe]  ; Correct_Parametet
000212  b2c1              UXTB     r1,r0
000214  203e              MOVS     r0,#0x3e
000216  f7fffffe          BL       EEPROM_WriteByte
;;;126    	
;;;127    	EEPROM_WriteByte(0x20,Polar1);
00021a  8a68              LDRH     r0,[r5,#0x12]  ; Correct_Parametet
00021c  b2c1              UXTB     r1,r0
00021e  2020              MOVS     r0,#0x20
000220  f7fffffe          BL       EEPROM_WriteByte
;;;128    /***********************************************************/
;;;129    	data_8bit=CON_CorrectionA>>8;
000224  8a28              LDRH     r0,[r5,#0x10]  ; Correct_Parametet
000226  0a01              LSRS     r1,r0,#8
;;;130    	EEPROM_WriteByte(0x21, data_8bit);
000228  2021              MOVS     r0,#0x21
00022a  f7fffffe          BL       EEPROM_WriteByte
;;;131    	EEPROM_WriteByte(0x22, CON_CorrectionA);
00022e  8a28              LDRH     r0,[r5,#0x10]  ; Correct_Parametet
000230  b2c1              UXTB     r1,r0
000232  2022              MOVS     r0,#0x22
000234  f7fffffe          BL       EEPROM_WriteByte
;;;132    	
;;;133    	data_8bit = CON_ReadA_Offset >> 24;
000238  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
00023a  0e01              LSRS     r1,r0,#24
;;;134    	EEPROM_WriteByte(0x23, data_8bit);
00023c  2023              MOVS     r0,#0x23
00023e  f7fffffe          BL       EEPROM_WriteByte
;;;135    	data_8bit = CON_ReadA_Offset >> 16;
000242  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
000244  f3c04107          UBFX     r1,r0,#16,#8
;;;136    	EEPROM_WriteByte(0x24, data_8bit);
000248  2024              MOVS     r0,#0x24
00024a  f7fffffe          BL       EEPROM_WriteByte
;;;137    	data_8bit = CON_ReadA_Offset >> 8;
00024e  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
000250  f3c02107          UBFX     r1,r0,#8,#8
;;;138    	EEPROM_WriteByte(0x25, data_8bit);
000254  2025              MOVS     r0,#0x25
000256  f7fffffe          BL       EEPROM_WriteByte
;;;139    	EEPROM_WriteByte(0x26, CON_ReadA_Offset);
00025a  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
00025c  b2c1              UXTB     r1,r0
00025e  2026              MOVS     r0,#0x26
000260  f7fffffe          BL       EEPROM_WriteByte
;;;140    	
;;;141    	EEPROM_WriteByte(0x27,Polar2);
000264  8aa8              LDRH     r0,[r5,#0x14]  ; Correct_Parametet
000266  b2c1              UXTB     r1,r0
000268  2027              MOVS     r0,#0x27
00026a  f7fffffe          BL       EEPROM_WriteByte
;;;142    	
;;;143    	data_8bit=TEMP_OFFSET>>8;
00026e  4c08              LDR      r4,|L2.656|
000270  8820              LDRH     r0,[r4,#0]  ; TEMP_OFFSET
000272  0a01              LSRS     r1,r0,#8
;;;144    	EEPROM_WriteByte(0x28, data_8bit);
000274  2028              MOVS     r0,#0x28
000276  f7fffffe          BL       EEPROM_WriteByte
;;;145    	EEPROM_WriteByte(0x29, TEMP_OFFSET);
00027a  8820              LDRH     r0,[r4,#0]  ; TEMP_OFFSET
00027c  e8bd4070          POP      {r4-r6,lr}
000280  b2c1              UXTB     r1,r0
000282  2029              MOVS     r0,#0x29
000284  f7ffbffe          B.W      EEPROM_WriteByte
;;;146    }
;;;147    //===========================================================================//
                          ENDP

                  |L2.648|
                          DCD      Correct_Strong
                  |L2.652|
                          DCD      Correct_Parametet
                  |L2.656|
                          DCD      TEMP_OFFSET

                          AREA ||i.Wite_adress||, CODE, READONLY, ALIGN=2

                  Wite_adress PROC
;;;396    /************************************************************************/
;;;397    void Wite_adress(void)
000000  4802              LDR      r0,|L3.12|
;;;398    {
;;;399    	EEPROM_WriteByte(0x31,ADDR);
000002  7801              LDRB     r1,[r0,#0]  ; ADDR
000004  2031              MOVS     r0,#0x31
000006  f7ffbffe          B.W      EEPROM_WriteByte
;;;400    }
;;;401    /******************* (C) COPYRIGHT 2015 AVER *****END OF FILE*************************/
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      ADDR

                          AREA ||i.Write_Limits||, CODE, READONLY, ALIGN=2

                  Write_Limits PROC
;;;317    
;;;318    void Write_Limits(void)
000000  b510              PUSH     {r4,lr}
;;;319    {
;;;320        vu8 data_8bit;
;;;321        
;;;322    	data_8bit = set_max_v >> 8;
000002  4c47              LDR      r4,|L4.288|
000004  8820              LDRH     r0,[r4,#0]  ; Run_Control
000006  0a01              LSRS     r1,r0,#8
;;;323    	EEPROM_WriteByte(0x47, data_8bit);
000008  2047              MOVS     r0,#0x47
00000a  f7fffffe          BL       EEPROM_WriteByte
;;;324    	EEPROM_WriteByte(0x48, set_max_v);
00000e  8820              LDRH     r0,[r4,#0]  ; Run_Control
000010  b2c1              UXTB     r1,r0
000012  2048              MOVS     r0,#0x48
000014  f7fffffe          BL       EEPROM_WriteByte
;;;325    	
;;;326    	data_8bit = set_min_v >> 8;
000018  8860              LDRH     r0,[r4,#2]  ; Run_Control
00001a  0a01              LSRS     r1,r0,#8
;;;327    	EEPROM_WriteByte(0x49, data_8bit);
00001c  2049              MOVS     r0,#0x49
00001e  f7fffffe          BL       EEPROM_WriteByte
;;;328    	EEPROM_WriteByte(0x4A, set_min_v);
000022  8860              LDRH     r0,[r4,#2]  ; Run_Control
000024  b2c1              UXTB     r1,r0
000026  204a              MOVS     r0,#0x4a
000028  f7fffffe          BL       EEPROM_WriteByte
;;;329        
;;;330        data_8bit = set_max_r >> 8;
00002c  88a0              LDRH     r0,[r4,#4]  ; Run_Control
00002e  0a01              LSRS     r1,r0,#8
;;;331    	EEPROM_WriteByte(0x4B, data_8bit);
000030  204b              MOVS     r0,#0x4b
000032  f7fffffe          BL       EEPROM_WriteByte
;;;332    	EEPROM_WriteByte(0x4C, set_max_r);
000036  88a0              LDRH     r0,[r4,#4]  ; Run_Control
000038  b2c1              UXTB     r1,r0
00003a  204c              MOVS     r0,#0x4c
00003c  f7fffffe          BL       EEPROM_WriteByte
;;;333    	
;;;334    	data_8bit = set_min_r >> 8;
000040  88e0              LDRH     r0,[r4,#6]  ; Run_Control
000042  0a01              LSRS     r1,r0,#8
;;;335    	EEPROM_WriteByte(0x4D, data_8bit);
000044  204d              MOVS     r0,#0x4d
000046  f7fffffe          BL       EEPROM_WriteByte
;;;336    	EEPROM_WriteByte(0x4E, set_min_r);
00004a  88e0              LDRH     r0,[r4,#6]  ; Run_Control
00004c  b2c1              UXTB     r1,r0
00004e  204e              MOVS     r0,#0x4e
000050  f7fffffe          BL       EEPROM_WriteByte
;;;337        
;;;338        data_8bit = set_max_c >> 8;
000054  8920              LDRH     r0,[r4,#8]  ; Run_Control
000056  0a01              LSRS     r1,r0,#8
;;;339    	EEPROM_WriteByte(0x4F, data_8bit);
000058  204f              MOVS     r0,#0x4f
00005a  f7fffffe          BL       EEPROM_WriteByte
;;;340    	EEPROM_WriteByte(0x50, set_max_c);
00005e  8920              LDRH     r0,[r4,#8]  ; Run_Control
000060  b2c1              UXTB     r1,r0
000062  2050              MOVS     r0,#0x50
000064  f7fffffe          BL       EEPROM_WriteByte
;;;341    	
;;;342    	data_8bit = set_min_c >> 8;
000068  8960              LDRH     r0,[r4,#0xa]  ; Run_Control
00006a  0a01              LSRS     r1,r0,#8
;;;343    	EEPROM_WriteByte(0x51, data_8bit);
00006c  2051              MOVS     r0,#0x51
00006e  f7fffffe          BL       EEPROM_WriteByte
;;;344    	EEPROM_WriteByte(0x52, set_min_c);
000072  8960              LDRH     r0,[r4,#0xa]  ; Run_Control
000074  b2c1              UXTB     r1,r0
000076  2052              MOVS     r0,#0x52
000078  f7fffffe          BL       EEPROM_WriteByte
;;;345        
;;;346    	data_8bit = pow_v >> 8;
00007c  8ea0              LDRH     r0,[r4,#0x34]  ; Run_Control
00007e  0a01              LSRS     r1,r0,#8
;;;347    	EEPROM_WriteByte(0x2A, data_8bit);
000080  202a              MOVS     r0,#0x2a
000082  f7fffffe          BL       EEPROM_WriteByte
;;;348    	EEPROM_WriteByte(0x2B, pow_v);
000086  8ea0              LDRH     r0,[r4,#0x34]  ; Run_Control
000088  b2c1              UXTB     r1,r0
00008a  202b              MOVS     r0,#0x2b
00008c  f7fffffe          BL       EEPROM_WriteByte
;;;349    	
;;;350    	data_8bit = pow_c >> 8;
000090  8f20              LDRH     r0,[r4,#0x38]  ; Run_Control
000092  0a01              LSRS     r1,r0,#8
;;;351    	EEPROM_WriteByte(0x2C, data_8bit);
000094  202c              MOVS     r0,#0x2c
000096  f7fffffe          BL       EEPROM_WriteByte
;;;352    	EEPROM_WriteByte(0x2D, pow_c);
00009a  8f20              LDRH     r0,[r4,#0x38]  ; Run_Control
00009c  b2c1              UXTB     r1,r0
00009e  202d              MOVS     r0,#0x2d
0000a0  f7fffffe          BL       EEPROM_WriteByte
;;;353        
;;;354        data_8bit = load_c >> 8;
0000a4  8de0              LDRH     r0,[r4,#0x2e]  ; Run_Control
0000a6  0a01              LSRS     r1,r0,#8
;;;355    	EEPROM_WriteByte(0x53, data_8bit);
0000a8  2053              MOVS     r0,#0x53
0000aa  f7fffffe          BL       EEPROM_WriteByte
;;;356    	EEPROM_WriteByte(0x54, load_c);
0000ae  8de0              LDRH     r0,[r4,#0x2e]  ; Run_Control
0000b0  b2c1              UXTB     r1,r0
0000b2  2054              MOVS     r0,#0x54
0000b4  f7fffffe          BL       EEPROM_WriteByte
;;;357        
;;;358        data_8bit = set_init_c >> 8;
0000b8  8a20              LDRH     r0,[r4,#0x10]  ; Run_Control
0000ba  0a01              LSRS     r1,r0,#8
;;;359    	EEPROM_WriteByte(0x70, data_8bit);
0000bc  2070              MOVS     r0,#0x70
0000be  f7fffffe          BL       EEPROM_WriteByte
;;;360    	EEPROM_WriteByte(0x71, set_init_c);
0000c2  8a20              LDRH     r0,[r4,#0x10]  ; Run_Control
0000c4  b2c1              UXTB     r1,r0
0000c6  2071              MOVS     r0,#0x71
0000c8  f7fffffe          BL       EEPROM_WriteByte
;;;361        
;;;362        data_8bit = set_sbs_c >> 8;
0000cc  8a60              LDRH     r0,[r4,#0x12]  ; Run_Control
0000ce  0a01              LSRS     r1,r0,#8
;;;363    	EEPROM_WriteByte(0x72, data_8bit);
0000d0  2072              MOVS     r0,#0x72
0000d2  f7fffffe          BL       EEPROM_WriteByte
;;;364    	EEPROM_WriteByte(0x73, set_sbs_c);
0000d6  8a60              LDRH     r0,[r4,#0x12]  ; Run_Control
0000d8  b2c1              UXTB     r1,r0
0000da  2073              MOVS     r0,#0x73
0000dc  f7fffffe          BL       EEPROM_WriteByte
;;;365        
;;;366        data_8bit = cdc_cv >> 8;
0000e0  8e20              LDRH     r0,[r4,#0x30]  ; Run_Control
0000e2  0a01              LSRS     r1,r0,#8
;;;367    	EEPROM_WriteByte(0x76, data_8bit);
0000e4  2076              MOVS     r0,#0x76
0000e6  f7fffffe          BL       EEPROM_WriteByte
;;;368    	EEPROM_WriteByte(0x77, cdc_cv);
0000ea  8e20              LDRH     r0,[r4,#0x30]  ; Run_Control
0000ec  b2c1              UXTB     r1,r0
0000ee  2077              MOVS     r0,#0x77
0000f0  f7fffffe          BL       EEPROM_WriteByte
;;;369        
;;;370        data_8bit = cdc_cc >> 8;
0000f4  8e60              LDRH     r0,[r4,#0x32]  ; Run_Control
0000f6  0a01              LSRS     r1,r0,#8
;;;371    	EEPROM_WriteByte(0x78, data_8bit);
0000f8  2078              MOVS     r0,#0x78
0000fa  f7fffffe          BL       EEPROM_WriteByte
;;;372    	EEPROM_WriteByte(0x79, cdc_cc);
0000fe  8e60              LDRH     r0,[r4,#0x32]  ; Run_Control
000100  b2c1              UXTB     r1,r0
000102  2079              MOVS     r0,#0x79
000104  f7fffffe          BL       EEPROM_WriteByte
;;;373        
;;;374        data_8bit = cdc_dc >> 8;
000108  8ee0              LDRH     r0,[r4,#0x36]  ; Run_Control
00010a  0a01              LSRS     r1,r0,#8
;;;375    	EEPROM_WriteByte(0x7A, data_8bit);
00010c  207a              MOVS     r0,#0x7a
00010e  f7fffffe          BL       EEPROM_WriteByte
;;;376    	EEPROM_WriteByte(0x7B, cdc_dc);
000112  8ee0              LDRH     r0,[r4,#0x36]  ; Run_Control
000114  e8bd4010          POP      {r4,lr}
000118  b2c1              UXTB     r1,r0
00011a  207b              MOVS     r0,#0x7b
00011c  f7ffbffe          B.W      EEPROM_WriteByte
;;;377        
;;;378    }
;;;379    
                          ENDP

                  |L4.288|
                          DCD      Run_Control+0x1c

                          AREA ||i.Wrtite_Beep||, CODE, READONLY, ALIGN=2

                  Wrtite_Beep PROC
;;;390    /*****************************************************************************/
;;;391    void Wrtite_Beep(void)//保存BEEP状态至FLASH中
000000  b510              PUSH     {r4,lr}
;;;392    {
;;;393    	EEPROM_WriteByte(0x2E, Beep_Flag);
000002  4806              LDR      r0,|L5.28|
000004  7801              LDRB     r1,[r0,#0]  ; Beep_Flag
000006  202e              MOVS     r0,#0x2e
000008  f7fffffe          BL       EEPROM_WriteByte
;;;394    	EEPROM_WriteByte(0x2F, t_beep);
00000c  4804              LDR      r0,|L5.32|
00000e  7801              LDRB     r1,[r0,#0]  ; t_beep
000010  e8bd4010          POP      {r4,lr}
000014  202f              MOVS     r0,#0x2f
000016  f7ffbffe          B.W      EEPROM_WriteByte
;;;395    }
;;;396    /************************************************************************/
                          ENDP

00001a  0000              DCW      0x0000
                  |L5.28|
                          DCD      Beep_Flag
                  |L5.32|
                          DCD      t_beep

                          AREA ||i.Wrtite_Lock||, CODE, READONLY, ALIGN=2

                  Wrtite_Lock PROC
;;;385    /******************************************************************************/
;;;386    void Wrtite_Lock(void)
000000  4802              LDR      r0,|L6.12|
;;;387    {
;;;388    	EEPROM_WriteByte(0x30, t_lock);
000002  7801              LDRB     r1,[r0,#0]  ; t_lock
000004  2030              MOVS     r0,#0x30
000006  f7ffbffe          B.W      EEPROM_WriteByte
;;;389    }
;;;390    /*****************************************************************************/
                          ENDP

00000a  0000              DCW      0x0000
                  |L6.12|
                          DCD      t_lock

                          AREA ||i.Wrtite_SetVA||, CODE, READONLY, ALIGN=2

                  Wrtite_SetVA PROC
;;;303    }
;;;304    void Wrtite_SetVA(void)
000000  b510              PUSH     {r4,lr}
;;;305    {
;;;306    	vu8 data_8bit;
;;;307      /*********************************************/
;;;308    	data_8bit = SET_Voltage >> 8;
000002  4c0b              LDR      r4,|L7.48|
000004  8860              LDRH     r0,[r4,#2]  ; Run_Control
000006  0a01              LSRS     r1,r0,#8
;;;309    	EEPROM_WriteByte(0x2A, data_8bit);
000008  202a              MOVS     r0,#0x2a
00000a  f7fffffe          BL       EEPROM_WriteByte
;;;310    	EEPROM_WriteByte(0x2B, SET_Voltage);
00000e  8860              LDRH     r0,[r4,#2]  ; Run_Control
000010  b2c1              UXTB     r1,r0
000012  202b              MOVS     r0,#0x2b
000014  f7fffffe          BL       EEPROM_WriteByte
;;;311    	
;;;312    	data_8bit = SET_Current >> 8;
000018  88a0              LDRH     r0,[r4,#4]  ; Run_Control
00001a  0a01              LSRS     r1,r0,#8
;;;313    	EEPROM_WriteByte(0x2C, data_8bit);
00001c  202c              MOVS     r0,#0x2c
00001e  f7fffffe          BL       EEPROM_WriteByte
;;;314    	EEPROM_WriteByte(0x2D, SET_Current);
000022  88a0              LDRH     r0,[r4,#4]  ; Run_Control
000024  e8bd4010          POP      {r4,lr}
000028  b2c1              UXTB     r1,r0
00002a  202d              MOVS     r0,#0x2d
00002c  f7ffbffe          B.W      EEPROM_WriteByte
;;;315    	/********************************************/
;;;316    }
;;;317    
                          ENDP

                  |L7.48|
                          DCD      Run_Control

                          AREA ||i.Wrtite_Zore||, CODE, READONLY, ALIGN=2

                  Wrtite_Zore PROC
;;;299    /****************************************************************************/
;;;300    void Wrtite_Zore(void)
000000  4802              LDR      r0,|L8.12|
;;;301    {
;;;302    	EEPROM_WriteByte(0x32, OFFSET_Zore);
000002  7801              LDRB     r1,[r0,#0]  ; OFFSET_Zore
000004  2032              MOVS     r0,#0x32
000006  f7ffbffe          B.W      EEPROM_WriteByte
;;;303    }
;;;304    void Wrtite_SetVA(void)
                          ENDP

00000a  0000              DCW      0x0000
                  |L8.12|
                          DCD      OFFSET_Zore

                          AREA ||i.Wrtite_step||, CODE, READONLY, ALIGN=2

                  Wrtite_step PROC
;;;379    
;;;380    void Wrtite_step(void)
000000  4802              LDR      r0,|L9.12|
;;;381    {
;;;382    	EEPROM_WriteByte(0x75, steptime);
000002  8800              LDRH     r0,[r0,#0]  ; steptime
000004  b2c1              UXTB     r1,r0
000006  2075              MOVS     r0,#0x75
000008  f7ffbffe          B.W      EEPROM_WriteByte
;;;383    }
;;;384    
                          ENDP

                  |L9.12|
                          DCD      steptime

;*** Start embedded assembler ***

#line 1 "..\\drive\\flash.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___7_flash_c_cb7dfbbe____REV16|
#line 114 "D:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_flash_c_cb7dfbbe____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___7_flash_c_cb7dfbbe____REVSH|
#line 128
|__asm___7_flash_c_cb7dfbbe____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
